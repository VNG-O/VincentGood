{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vincent Good\\\\Programming\\\\GitHub\\\\VincentGood\\\\curriculumvitae\\\\src\\\\components\\\\Navbar.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { darkTheme } from '../theme';\nimport { AppBar, Toolbar, Container, Box, Typography, Button, IconButton, makeStyles, Link, Tabs, Tab } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  nav: {\n    backgroundColor: darkTheme.palette.background.paper\n  },\n  navBox: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignContent: \"center\"\n  },\n  navButton: {\n    textTransform: \"none\",\n    fontSize: \"17\",\n    \"&:hover\": {\n      textDecoration: \"none\"\n    },\n    \"&:focus\": darkTheme.palette.action.focus\n  }\n});\n\nconst Navbar = () => {\n  _s();\n\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    /*#__PURE__*/\n    // center navtabs\n    _jsxDEV(AppBar, {\n      className: classes.nav,\n      position: \"fixed\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.navBox,\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: /*#__PURE__*/_jsxDEV(Tabs, {\n            value: value,\n            onChange: handleChange,\n            indicatorColor: \"primary\",\n            textColor: \"primary\",\n            centered: true,\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              className: classes.navButton,\n              component: Link,\n              href: \"#home\",\n              label: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: \"Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              className: classes.navButton,\n              component: Link,\n              href: \"#aboutMe\",\n              label: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: \"About me\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(Navbar, \"BDkWVlEh8+DaKPHysXJ2gpEmtFI=\", false, function () {\n  return [useStyles];\n});\n\n_c = Navbar;\nexport default Navbar; // import PropTypes from 'prop-types';\n// import { useState } from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n// import AppBar from '@material-ui/core/AppBar';\n// import Tabs from '@material-ui/core/Tabs';\n// import Tab from '@material-ui/core/Tab';\n// import Typography from '@material-ui/core/Typography';\n// import Box from '@material-ui/core/Box';\n// import { darkTheme } from '../theme';\n// function TabPanel(props) {\n//   const { children, value, index, ...other } = props;\n//   return (\n//     <div\n//       role=\"tabpanel\"\n//       hidden={value !== index}\n//       id={`nav-tabpanel-${index}`}\n//       aria-labelledby={`nav-tab-${index}`}\n//       {...other}\n//     >\n//       {value === index && (\n//         <Box p={3}>\n//           <Typography>{children}</Typography>\n//         </Box>\n//       )}\n//     </div>\n//   );\n// }\n// TabPanel.propTypes = {\n//   children: PropTypes.node,\n//   index: PropTypes.any.isRequired,\n//   value: PropTypes.any.isRequired,\n// };\n// function a11yProps(index) {\n//   return {\n//     id: `nav-tab-${index}`,\n//     'aria-controls': `nav-tabpanel-${index}`,\n//   };\n// }\n// function LinkTab(props) {\n//   return (\n//     <Tab\n//       component=\"a\"\n//       onClick={(event) => {\n//         event.preventDefault();\n//       }}\n//       {...props}\n//     />\n//   );\n// }\n// const useStyles = makeStyles({\n//   root: {\n//     // flexGrow: 1,\n//     backgroundColor: darkTheme.palette.background.paper,\n//   },\n// });\n// export default function NavTabs() {\n//   const classes = useStyles();\n//   const [value, setValue] = useState(0);\n//   const handleChange = (event, newValue) => {\n//     setValue(newValue);\n//   };\n//   return (\n//     <div className={classes.root}>\n//       <AppBar position=\"static\">\n//         <Tabs\n//           variant=\"fullWidth\"\n//           value={value}\n//           onChange={handleChange}\n//           aria-label=\"nav tabs example\"\n//         >\n//           <LinkTab label=\"Home\" href=\"/drafts\" {...a11yProps(0)} />\n//           <LinkTab label=\"About me\" href=\"/trash\" {...a11yProps(1)} />\n//         </Tabs>\n//       </AppBar>\n//       <TabPanel value={value} index={0}>\n//         Page One\n//       </TabPanel>\n//       <TabPanel value={value} index={1}>\n//         Page Two\n//       </TabPanel>\n//     </div>\n//   );\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["C:/Users/Vincent Good/Programming/GitHub/VincentGood/curriculumvitae/src/components/Navbar.jsx"],"names":["useState","darkTheme","AppBar","Toolbar","Container","Box","Typography","Button","IconButton","makeStyles","Link","Tabs","Tab","MenuIcon","useStyles","nav","backgroundColor","palette","background","paper","navBox","display","justifyContent","alignContent","navButton","textTransform","fontSize","textDecoration","action","focus","Navbar","classes","value","setValue","handleChange","event","newValue"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport { darkTheme } from '../theme';\r\nimport { AppBar, Toolbar, Container, Box, Typography, Button, IconButton, makeStyles, Link, Tabs, Tab } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles({\r\n    nav: {\r\n        backgroundColor: darkTheme.palette.background.paper,\r\n    },\r\n\r\n    navBox: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignContent: \"center\",\r\n    },\r\n    \r\n    navButton: {\r\n        textTransform: \"none\",\r\n        fontSize: \"17\",\r\n\r\n        \"&:hover\": {\r\n            textDecoration: \"none\",\r\n        },\r\n\r\n        \"&:focus\": darkTheme.palette.action.focus,\r\n    },\r\n  })\r\n\r\nconst Navbar = () => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        // center navtabs\r\n        <AppBar className={classes.nav} position=\"fixed\">\r\n            <Box className={classes.navBox}>\r\n                <Toolbar>\r\n                    \r\n                    <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    centered>\r\n                        <Tab\r\n                        className={classes.navButton}\r\n                        component={Link}\r\n                        href=\"#home\"\r\n                        label=\r\n                        {<Typography variant=\"body1\">\r\n                            Home\r\n                        </Typography>} />\r\n                        <Tab\r\n                        className={classes.navButton}\r\n                        component={Link}\r\n                        href=\"#aboutMe\"\r\n                        label=\r\n                        {<Typography variant=\"body1\">\r\n                            About me\r\n                        </Typography>} />\r\n                    </Tabs>\r\n\r\n                    {/* <IconButton edge=\"end\" aria-label=\"menu\">\r\n                        <MenuIcon />\r\n                    </IconButton> */}\r\n                    \r\n                </Toolbar>\r\n            </Box>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n\r\n// import PropTypes from 'prop-types';\r\n// import { useState } from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import AppBar from '@material-ui/core/AppBar';\r\n// import Tabs from '@material-ui/core/Tabs';\r\n// import Tab from '@material-ui/core/Tab';\r\n// import Typography from '@material-ui/core/Typography';\r\n// import Box from '@material-ui/core/Box';\r\n// import { darkTheme } from '../theme';\r\n\r\n// function TabPanel(props) {\r\n//   const { children, value, index, ...other } = props;\r\n\r\n//   return (\r\n//     <div\r\n//       role=\"tabpanel\"\r\n//       hidden={value !== index}\r\n//       id={`nav-tabpanel-${index}`}\r\n//       aria-labelledby={`nav-tab-${index}`}\r\n//       {...other}\r\n//     >\r\n//       {value === index && (\r\n//         <Box p={3}>\r\n//           <Typography>{children}</Typography>\r\n//         </Box>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// TabPanel.propTypes = {\r\n//   children: PropTypes.node,\r\n//   index: PropTypes.any.isRequired,\r\n//   value: PropTypes.any.isRequired,\r\n// };\r\n\r\n// function a11yProps(index) {\r\n//   return {\r\n//     id: `nav-tab-${index}`,\r\n//     'aria-controls': `nav-tabpanel-${index}`,\r\n//   };\r\n// }\r\n\r\n// function LinkTab(props) {\r\n//   return (\r\n//     <Tab\r\n//       component=\"a\"\r\n//       onClick={(event) => {\r\n//         event.preventDefault();\r\n//       }}\r\n//       {...props}\r\n//     />\r\n//   );\r\n// }\r\n\r\n// const useStyles = makeStyles({\r\n//   root: {\r\n//     // flexGrow: 1,\r\n//     backgroundColor: darkTheme.palette.background.paper,\r\n//   },\r\n// });\r\n\r\n// export default function NavTabs() {\r\n//   const classes = useStyles();\r\n//   const [value, setValue] = useState(0);\r\n\r\n//   const handleChange = (event, newValue) => {\r\n//     setValue(newValue);\r\n//   };\r\n\r\n//   return (\r\n//     <div className={classes.root}>\r\n//       <AppBar position=\"static\">\r\n//         <Tabs\r\n//           variant=\"fullWidth\"\r\n//           value={value}\r\n//           onChange={handleChange}\r\n//           aria-label=\"nav tabs example\"\r\n//         >\r\n//           <LinkTab label=\"Home\" href=\"/drafts\" {...a11yProps(0)} />\r\n//           <LinkTab label=\"About me\" href=\"/trash\" {...a11yProps(1)} />\r\n//         </Tabs>\r\n//       </AppBar>\r\n//       <TabPanel value={value} index={0}>\r\n//         Page One\r\n//       </TabPanel>\r\n//       <TabPanel value={value} index={1}>\r\n//         Page Two\r\n//       </TabPanel>\r\n//     </div>\r\n//   );\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}